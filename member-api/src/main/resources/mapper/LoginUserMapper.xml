<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huaxin.member.mapper.LoginUserMapper">

    <resultMap id="BaseResultMap" type="com.huaxin.member.model.LoginUser">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="organization_id" property="organizationId" jdbcType="INTEGER" />
        <result column="login_name" property="loginName" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
        <result column="image" property="image" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="sex" property="sex" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="id_card" property="idCard" jdbcType="VARCHAR" />

    </resultMap>
    <sql id="Base_Column_List">
		id, organization_id, login_name, user_name, login_password, create_time,
		sex,
		phone, address,id_card,image
	</sql>

    <select id="findNotOfRoleId" resultType="map" parameterType="java.lang.String">
        select
          id,login_name,user_name
        from hx_user
        where id not in (select user_id from hx_user_role where role_id =#{roleId})

    </select>

    <select id="findOfRoleId" resultType="map" parameterType="java.lang.String">
        select
          id,login_name,user_name
        from hx_user
        where id  in (select user_id from hx_user_role where role_id =#{roleId})

    </select>


    <select id="login" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List" />
        from hx_user
        where login_name = #{login_name,jdbcType=VARCHAR} and login_password =
        #{login_passwd,jdbcType=VARCHAR}
    </select>


    <select id="findByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from hx_user
        where login_name = #{loginName,jdbcType=VARCHAR}
    </select>


    <select id="findList" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from hx_user
        where is_delete <![CDATA[ <> ]]> 1
        <if test="userName!=null and userName!=''">
            and user_name  like concat('%',#{userName},'%')
        </if>

        order by create_time
    </select>

    <update id="updateUser" parameterType="map">
        update hx_user set
        <if test="userName!=null">
            user_name = #{userName},
        </if>
        <if test="image!=null">
            image = #{image},
        </if>

        <if test="address!=null">
            address = #{address},
        </if>

        <if test="sex!=null">
            sex = #{sex},
        </if>

        <if test="phone!=null">
            phone = #{phone},
        </if>

        <if test="loginPassword!=null">
            login_password = #{loginPassword},
        </if>

        create_time = now()

        where login_name = #{loginName}


    </update>

    <update id="deleteUser" parameterType="map">
        update hx_user set is_delete=1  where 1=1
        <if test="ids!='' and ids!=null">
            and id  in
            <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </update>



</mapper>


